{"version":3,"sources":["components/Header.js","contexts/CurrentUserContext.js","components/Card.js","components/Main.js","components/Footer.js","components/PopupWithForm.js","components/ImagePopup.js","utils/Api.js","components/EditProfilePopup.js","components/EditAvatarPopup.js","components/AddPlacePopup.js","components/App.js","serviceWorker.js","index.js","images/logo.svg"],"names":["Header","className","src","Logo","alt","CurrentUserContext","React","createContext","Card","id","name","link","likes","owner","cardClick","cardLikeClick","cardBasketClick","currentUser","useContext","cardDeleteButtonClassName","_id","cardLikeButtonClassName","some","i","key","type","onClick","length","Main","onEditProfile","onAddPlace","onEditAvatar","onCardClick","cards","onCardLike","onCardDelete","avatar","about","map","data","Footer","PopupWithForm","title","buttonTitle","children","isOpen","onClose","onSubmit","ImagePopup","card","api","baseUrl","token","this","_baseUrl","_token","url","fetch","method","headers","authorization","then","res","ok","json","Promise","reject","status","values","body","JSON","stringify","EditProfilePopup","onUpdateUser","useState","setName","description","setDescription","useEffect","evt","preventDefault","required","maxLength","minLength","pattern","onChange","target","value","EditAvatarPopup","onUpdateAvatar","avatarRef","useRef","current","ref","placeholder","AddPlacePopup","setTitle","setUrl","App","isEditProfilePopupOpen","setEditProfileClick","isAddPlacePopupOpen","setAddPlaceClick","isEditAvatarPopupOpen","setEditAvatarClick","selectedCard","setSelectedCard","setCurrentUser","all","get","userData","cardsData","setCards","catch","err","console","log","closeAllPopup","Provider","imageData","delete","put","newCard","newCards","cardId","filter","patch","newUserInfo","userAvatar","patchAvatar","newUserAvatar","cardData","post","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error","message","module","exports"],"mappings":"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","file":"static/js/main.27078137.chunk.js","sourcesContent":["import React from 'react';\r\nimport Logo from '../images/logo.svg';\r\n\r\nfunction Header() {\r\n    return (\r\n        <header className=\"header\">\r\n            <img src={Logo} alt=\"Логотип\" className=\"header__image\" />\r\n        </header>\r\n    );\r\n}\r\n\r\nexport default Header;","import React from 'react';\r\n\r\nexport const CurrentUserContext = React.createContext();","import React from 'react'\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext.js'\r\n\r\nfunction Card({id, name, link, likes, owner, cardClick, cardLikeClick, cardBasketClick}) {\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    // Определяем, являемся ли мы владельцем текущей карточки\r\n    const isOwn = owner === currentUser._id;\r\n    // Создаём переменную, которую после зададим в `className` для кнопки удаления\r\n    const cardDeleteButtonClassName = (\r\n        isOwn ? 'article__basket article__basket_active' : 'article__basket'\r\n      );\r\n    // Определяем, есть ли у карточки лайк, поставленный текущим пользователем\r\n    const isLiked = likes.some(i => i._id === currentUser._id);\r\n    // Создаём переменную, которую после зададим в `className` для кнопки лайка\r\n    const cardLikeButtonClassName = (\r\n        isLiked ? 'article__like article__like_active' : 'article__like'\r\n    );\r\n    function handleClick() {\r\n        cardClick({name: name, link: link});\r\n      }\r\n\r\n    function handleLikeClick() {\r\n        cardLikeClick({likes: likes, id: id})\r\n    }\r\n\r\n    function handleBasketClick() {\r\n        cardBasketClick(id)\r\n    }\r\n\r\n    return(\r\n        <div className=\"article\" key={id}>\r\n            <button className={cardDeleteButtonClassName} type=\"button\" onClick={handleBasketClick}></button>\r\n            <img className=\"article__foto\"  alt={name} src={link} onClick={handleClick}/>\r\n            <div className=\"article__description\">\r\n            <p className=\"article__name\">{name}</p>\r\n                <div className=\"article__like-container\">\r\n                    <button className={cardLikeButtonClassName} type=\"button\" onClick={handleLikeClick}></button>\r\n                    <span className=\"article__like-amount\">{likes.length}</span>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\nexport default Card;","import React from 'react';\r\nimport Card from './Card';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction Main({onEditProfile, onAddPlace, onEditAvatar, onCardClick, cards, onCardLike, onCardDelete}) {\r\n\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n    \r\n    return(\r\n        <>\r\n        <section className=\"profile\">\r\n            <div className=\"profile__wrap\">\r\n                <img src={currentUser.avatar} alt=\"Фото\" className=\"profile__foto\"/>\r\n                <div className=\"profile__pen\" onClick={onEditAvatar}></div>\r\n            </div>\r\n            <div className=\"profile__info\">\r\n                <h2 className=\"profile__name\">{currentUser.name}</h2>\r\n                <p className=\"profile__description\">{currentUser.about}</p>\r\n                <button className=\"profile__edit\" type=\"button\" onClick={onEditProfile}></button>\r\n            </div>\r\n            \r\n            <button className=\"profile__button\" type=\"button\" onClick={onAddPlace}></button>\r\n        </section>\r\n\r\n        <section className=\"elements\">\r\n            {cards.map(data => (\r\n                <Card id={data._id}\r\n                    key={data._id}\r\n                    name={data.name}\r\n                    link={data.link} \r\n                    likes={data.likes}\r\n                    owner={data.owner._id}\r\n                    cardClick={onCardClick}\r\n                    cardLikeClick={onCardLike}\r\n                    cardBasketClick={onCardDelete}/>\r\n            ))}\r\n        </section>\r\n        \r\n        </>\r\n    );\r\n}\r\nexport default Main;","import React from 'react';\r\n\r\nfunction Footer() {\r\n    return(\r\n        <footer className=\"footer\">\r\n            <p className=\"footer__copy\">&copy; 2020 Mesto Russia</p>\r\n        </footer>\r\n    );\r\n}\r\n\r\nexport default Footer;","import React from 'react';\r\n\r\nfunction PopupWithForm({name, title, buttonTitle, children, isOpen, onClose, onSubmit}) {\r\n    return(\r\n    <div className={`popup popup__${name} ${isOpen && 'popup_opened'}`}>\r\n        <form className=\"popup__container\" onSubmit={onSubmit}>\r\n            <h2 className=\"popup__title\">{title}</h2>\r\n            {children}\r\n            <button className=\"popup__button\" type=\"submit\">{buttonTitle}</button>\r\n            <button className=\"popup__close-icon\" type=\"button\" onClick={onClose}></button>\r\n        </form>\r\n    </div>\r\n    );\r\n  \r\n}\r\n\r\nexport default PopupWithForm;","import React from 'react';\r\n\r\nfunction ImagePopup({card, onClose}) {\r\n    return(\r\n        <div className={`popup popup__image ${card.link && 'popup_opened'}`}>\r\n            <div className=\"open-popup\"> \r\n                <img  alt=\"\" className=\"open-popup__image\" src={card.link} />\r\n                <p className=\"open-popup__text\">{card.name}</p>\r\n                <button className=\"popup__close-icon\" type=\"button\" onClick={onClose}></button>\r\n            </div>  \r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ImagePopup;","class Api {\r\n    constructor(baseUrl, token) {\r\n        this._baseUrl = baseUrl;\r\n        this._token = token;\r\n    }\r\n\r\n    get(url) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'GET',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then((res) => {\r\n                if(res.ok) {\r\n                    return res.json();\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n            \r\n    }\r\n\r\n    patch(url, values) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.name,\r\n                about: values.about\r\n            })\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res.json()\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n    patchAvatar(url, values) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'PATCH',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                avatar: values.avatar\r\n            })\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res.json()\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n    post(url, values) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'POST',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify({\r\n                name: values.title,\r\n                link: values.url\r\n            })\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res.json()\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n    delete(url) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'DELETE',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res.json()\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n    put(url) {\r\n        return fetch(this._baseUrl + url, {\r\n            method: 'PUT',\r\n            headers: {\r\n                authorization: this._token,\r\n                'Content-Type': 'application/json'\r\n            }\r\n        })\r\n            .then(res => {\r\n                if(res.ok) {\r\n                    return res.json()\r\n                }\r\n                return Promise.reject(`Ошибка: ${res.status}`)\r\n            })\r\n    }\r\n\r\n}\r\nconst indentifier = 'cohort-12'\r\nconst api = new Api(`https://mesto.nomoreparties.co/v1/${indentifier}/`, '226a3b48-5e66-4b0b-a28d-c1cfea729696')\r\nexport default api;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport { CurrentUserContext } from '../contexts/CurrentUserContext.js';\r\n\r\nfunction EditProfilePopup({isOpen, onClose, onUpdateUser}) {\r\n\r\n    const [name, setName] = React.useState('');\r\n    const [description, setDescription] = React.useState('');\r\n    const currentUser = React.useContext(CurrentUserContext);\r\n\r\n    React.useEffect(() => {\r\n        setName(currentUser.name);\r\n        setDescription(currentUser.about)\r\n    }, [currentUser])\r\n\r\n    function handleChangeName(evt) {\r\n        setName(evt.target.value)\r\n    }\r\n\r\n    function handleChangeDescription(evt) {\r\n        setDescription(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onUpdateUser({\r\n            name: name,\r\n            about: description,\r\n          });\r\n    }\r\n    return(\r\n        <PopupWithForm name={'edit'} title={'Редактировать профиль'}\r\n            buttonTitle={'Сохранить'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <input id=\"form__title\"\r\n                type=\"text\"\r\n                name=\"name\"\r\n                className=\"popup__input popup__input_type_title\"\r\n                required maxLength=\"40\"\r\n                minLength=\"2\"\r\n                pattern=\"[A-Za-zа-яА-Я -]{1,40}\"\r\n                onChange={handleChangeName}\r\n                value={name} />\r\n            <span id=\"form__title-error\" className=\"popup__input-error\"></span>\r\n            <input type=\"text\"\r\n                id=\"form__description\"\r\n                name=\"description\"\r\n                className=\"popup__input popup__input_type_description\"\r\n                required maxLength=\"200\"\r\n                minLength=\"2\"\r\n                onChange={handleChangeDescription}\r\n                value={description} />\r\n            <span id=\"form__description-error\" className=\"popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditProfilePopup;","import React from 'react';\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction EditAvatarPopup({isOpen, onClose, onUpdateAvatar}) {\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onUpdateAvatar({\r\n          avatar: avatarRef.current.value,\r\n        });\r\n      }\r\n\r\n    const avatarRef = React.useRef();\r\n    return(\r\n        <PopupWithForm name={'avatar'} title={'Обновить аватар'} buttonTitle={'Сохранить'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <input ref={avatarRef} id=\"form__title\" type=\"url\" name=\"link\" className=\"popup__input popup__input_type_title\"  placeholder=\"Адрес картинки\" required minLength=\"1\" />\r\n            <span id=\"form__title-error\" className=\"popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default EditAvatarPopup;","import React from 'react'\r\nimport PopupWithForm from './PopupWithForm';\r\n\r\nfunction AddPlacePopup({isOpen, onClose, onAddPlace}) {\r\n\r\n    const [title, setTitle] = React.useState('');\r\n    const [url, setUrl] = React.useState('');\r\n\r\n    function handleChangeTitle(evt) {\r\n        setTitle(evt.target.value)\r\n    }\r\n    function handleChangeUrl(evt) {\r\n        setUrl(evt.target.value)\r\n    }\r\n\r\n    function handleSubmit(evt) {\r\n        evt.preventDefault();\r\n        onAddPlace({\r\n            title: title,\r\n            url: url\r\n        });\r\n      }\r\n    return(\r\n        <PopupWithForm name={'add'} title={'Новое место'} buttonTitle={'Создать'} isOpen={isOpen} onClose={onClose} onSubmit={handleSubmit}>\r\n            <input id=\"form__title\"\r\n                type=\"text\"\r\n                name=\"title\"\r\n                className=\"popup__input popup__input_type_title\"\r\n                placeholder=\"Название\"\r\n                required maxLength=\"30\"\r\n                minLength=\"1\"\r\n                onChange={handleChangeTitle} />\r\n            <span id=\"form__title-error\" className=\"popup__input-error\"></span>\r\n            <input type=\"url\"\r\n                id=\"form__description\"\r\n                name=\"url\"\r\n                className=\"popup__input popup__input_type_description\"\r\n                placeholder=\"Ссылка на картинку\"\r\n                required\r\n                onChange={handleChangeUrl}/>\r\n            <span id=\"form__description-error\" className=\"popup__input-error\"></span>\r\n        </PopupWithForm>\r\n    );\r\n}\r\n\r\nexport default AddPlacePopup;","import React from 'react';\r\nimport Header from './Header';\r\nimport Main from './Main';\r\nimport Footer from './Footer';\r\nimport PopupWithForm from './PopupWithForm';\r\nimport ImagePopup from './ImagePopup';\r\nimport api from '../utils/Api.js';\r\nimport {CurrentUserContext} from '../contexts/CurrentUserContext';\r\nimport EditProfilePopup from './EditProfilePopup';\r\nimport EditAvatarPopup from './EditAvatarPopup';\r\nimport AddPlacePopup from './AddPlacePopup';\r\n\r\n\r\nfunction App() {\r\n\r\n    const [isEditProfilePopupOpen, setEditProfileClick] = React.useState(false);\r\n    const [isAddPlacePopupOpen, setAddPlaceClick] = React.useState(false);\r\n    const [isEditAvatarPopupOpen, setEditAvatarClick] = React.useState(false);\r\n    const [selectedCard, setSelectedCard] = React.useState({name: null, link: null});\r\n    const [currentUser, setCurrentUser] = React.useState({})\r\n\r\n    React.useEffect(() => {\r\n        Promise.all([api.get('users/me'), api.get('cards')])\r\n            .then(([userData, cardsData]) => {\r\n                setCurrentUser(userData);\r\n                setCards(cardsData);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }, [])\r\n\r\n    const [cards, setCards] = React.useState([]);\r\n    //обработчик постановки/снятия лайка\r\n    function handleCardLike(card) {\r\n        // Снова проверяем, есть ли уже лайк на этой карточке\r\n        const isLiked = card.likes.some(i => i._id === currentUser._id);\r\n        \r\n        // Отправляем запрос в API и получаем обновлённые данные карточки\r\n        (!isLiked ? api.put(`cards/likes/${card.id}`) : api.delete(`cards/likes/${card.id}`))\r\n            .then((newCard) => {\r\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n                const newCards = cards.map((current) => current._id === card.id ? newCard : current);\r\n                // Обновляем стейт\r\n                setCards(newCards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })    \r\n    }\r\n    //обработчик удаления карточки\r\n    function handleCardDelete(cardId) {\r\n        api.delete(`cards/${cardId}`)\r\n            .then(() => {\r\n                // Формируем новый массив на основе имеющегося, подставляя в него новую карточку\r\n                const newCards = cards.filter((current) => current._id !== cardId );\r\n                // Обновляем стейт\r\n                setCards(newCards);\r\n            })\r\n            .catch((err) => {\r\n                console.log(err)\r\n            })\r\n    }\r\n\r\n    function handleEditAvatarClick() {\r\n        setEditAvatarClick(true); \r\n    }\r\n\r\n    function handleEditProfileClick() { \r\n        setEditProfileClick(true);    \r\n    }\r\n\r\n    function handleAddPlaceClick() {\r\n        setAddPlaceClick(true);  \r\n    }\r\n\r\n    function closeAllPopup(){\r\n        setEditAvatarClick(false);\r\n        setEditProfileClick(false);\r\n        setAddPlaceClick(false);\r\n        setSelectedCard({name: null, link: null});\r\n    }\r\n\r\n    function handleCardClick(imageData) {\r\n        setSelectedCard({name: imageData.name, link: imageData.link});\r\n    }\r\n\r\n    function handleUpdateUser(userData) {\r\n        api.patch('users/me', userData).then(newUserInfo => {\r\n            setCurrentUser(newUserInfo);\r\n            closeAllPopup();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function handleUpdateAvatar(userAvatar) {\r\n        api.patchAvatar('users/me/avatar', userAvatar).then(newUserAvatar => {\r\n            setCurrentUser(newUserAvatar);\r\n            closeAllPopup();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n    function handleAddPlace(cardData) {\r\n        api.post('cards', cardData).then(newCard => {\r\n            console.log(newCard)\r\n            setCards([newCard, ...cards]);\r\n            closeAllPopup();\r\n        })\r\n        .catch((err) => {\r\n            console.log(err)\r\n        })\r\n    }\r\n\r\n  return (\r\n    <div className=\"page\">\r\n        <CurrentUserContext.Provider value={currentUser}>\r\n            <div className=\"wrapper\">\r\n            <Header />\r\n            <Main onEditProfile={handleEditProfileClick}\r\n                onAddPlace={handleAddPlaceClick}\r\n                onEditAvatar={handleEditAvatarClick}\r\n                onCardClick={handleCardClick}\r\n                cards={cards}\r\n                onCardLike={handleCardLike}\r\n                onCardDelete={handleCardDelete}/>\r\n            <Footer />\r\n\r\n            <EditProfilePopup isOpen={isEditProfilePopupOpen} onClose={closeAllPopup} onUpdateUser={handleUpdateUser}/>\r\n            <EditAvatarPopup isOpen={isEditAvatarPopupOpen} onClose={closeAllPopup} onUpdateAvatar={handleUpdateAvatar}/>\r\n            <AddPlacePopup isOpen={isAddPlacePopupOpen} onClose={closeAllPopup} onAddPlace={handleAddPlace}/>\r\n            \r\n            <PopupWithForm name={'confirm'} title={'Вы уверены?'} buttonTitle={'Да'} />\r\n\r\n            <ImagePopup card={selectedCard} onClose={closeAllPopup}/>\r\n\r\n            </div>\r\n        </CurrentUserContext.Provider>\r\n        \r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport * as serviceWorker from './serviceWorker';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n","module.exports = __webpack_public_path__ + \"static/media/logo.855a8c98.svg\";"],"sourceRoot":""}